name: Auto distribuild feeds

on:
  workflow_run:
    workflows: ["Auto compile with openwrt sdk"]
    types:
      - completed
  workflow_dispatch:

permissions:
  contents: write

jobs:
  distribuild:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}

    steps:
      - uses: actions/checkout@v4

      - name: Get latest release tag
        id: get_release
        run: |
          tag=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          echo "tag=$tag" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download release assets
        run: |
          mkdir release_assets
          gh release download ${{ steps.get_release.outputs.tag }} --dir release_assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare feed directories
        env:
          FEED_VERSION: ${{ steps.get_release.outputs.tag }}
        run: |
          mkdir -p public/${FEED_VERSION}

          for arch in $(ls release_assets/upload); do
            mkdir -p public/${FEED_VERSION}/${arch}

            cp -r release_assets/mypackage/*.ipk public/${FEED_VERSION}/${arch}/ || true

            cp -r release_assets/upload/${arch}/packages/*.ipk public/${FEED_VERSION}/${arch}/ || true

            ./staging_dir/host/bin/opkg-make-index public/${FEED_VERSION}/${arch} > public/${FEED_VERSION}/${arch}/Packages
            gzip -9nc public/${FEED_VERSION}/${arch}/Packages > public/${FEED_VERSION}/${arch}/Packages.gz

            {
              echo "<html><head><meta charset='utf-8'><title>Feed for ${arch}</title></head><body>"
              echo "<h1>Packages for ${arch}</h1><ul>"
              for f in $(ls public/${FEED_VERSION}/${arch}); do
                echo "<li><a href=\"$f\">$f</a></li>"
              done
              echo "</ul></body></html>"
            } > public/${FEED_VERSION}/${arch}/index.html
          done

          {
            echo "<html><head><meta charset='utf-8'><title>Feed ${FEED_VERSION}</title></head><body>"
            echo "<h1>Feed version ${FEED_VERSION}</h1><ul>"
            for arch in $(ls public/${FEED_VERSION}); do
              echo "<li><a href=\"$arch/\">$arch</a></li>"
            done
            echo "</ul></body></html>"
          } > public/${FEED_VERSION}/index.html

          echo "${FEED_VERSION}" > public/latest.txt

      - name: Deploy feed to GitHub Pages
        run: |
          cd public
          git init
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update feed $(date +'%Y-%m-%d %H:%M:%S')"
          git branch -M gh-pages
          git remote add origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push -f origin gh-pages
