name: Build-Packages

on:
  workflow_dispatch:
  push:
    branches: [ main ]
env:
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64_cortex-a53, arm_cortex-a7_neon-vfpv4, x86_64]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Free disk space
      run: |
        echo "Before cleanup:"
        df -h
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get clean
        echo "After cleanup:"
        df -h

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses-dev zlib1g-dev gawk git gettext \
          libssl-dev xsltproc rsync wget unzip python3 jq zstd

    - name: Download OpenWrt SDK
      run: |
        case ${{ matrix.target }} in
          aarch64_cortex-a53)
            SDK_URL="https://archive.openwrt.org/releases/24.10.0/targets/qualcommax/ipq807x/openwrt-sdk-24.10.0-qualcommax-ipq807x_gcc-13.3.0_musl.Linux-x86_64.tar.zst"
            ;;
          arm_cortex-a7_neon-vfpv4)
            SDK_URL="https://archive.openwrt.org/releases/24.10.0/targets/ipq40xx/generic/openwrt-sdk-24.10.0-ipq40xx-generic_gcc-13.3.0_musl_eabi.Linux-x86_64.tar.zst"
            ;;
          x86_64)
            SDK_URL="https://archive.openwrt.org/releases/24.10.0/targets/x86/64/openwrt-sdk-24.10.0-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst"
            ;;
        esac
        curl -fL -o sdk.tar.zst "$SDK_URL"
        mkdir openwrt
        tar --zstd -xf sdk.tar.zst -C openwrt --strip-components=1

    - name: Copy packages
      run: |
        cp -r * openwrt/package/ || true

    - name: Compile packages
      run: |
        cd openwrt
        make defconfig
        make package/compile -j$(nproc) V=s

    - name: Generate feed index
      run: |
        mkdir -p artifacts/${{ matrix.target }}
        PKG_DIR="artifacts/${{ matrix.target }}"
        # 收集所有 ipk
        find openwrt/bin/packages/ -name "*.ipk" -exec cp {} $PKG_DIR/ \;
        cd $PKG_DIR
        # 生成 Packages 索引
        opkg-make-index . > Packages
        gzip -9nc Packages > Packages.gz
        cp Packages Packages.manifest

    - name: Sign feed index
      run: |
        cd artifacts/${{ matrix.target }}
        echo "${{ secrets.USIGN_SECRET }}" > usign.key
        openwrt/staging_dir/host/bin/usign -S -m Packages -s usign.key -x Packages.sig
        rm -f usign.key

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: github.ref == 'refs/heads/main'
      with:
        tag_name: packages-${{ github.run_number }}
        name: "Packages Build #${{ github.run_number }} 🚀"
        body: |
          自动构建的 OpenWrt 包合集
          - 架构: ${{ matrix.target }}
          - 时间: $(date +'%Y-%m-%d %H:%M:%S')
        files: artifacts/${{ matrix.target }}/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
